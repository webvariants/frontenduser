<?
if (!empty($errormsg)) {
	WV_redaxo::error($errormsg);
}

$form = new WV_Backend_Form('index.php', 'POST', 'Benutzer '.($func == 'add' ? 'erstellen' : 'bearbeiten'));

$form->addHiddenValue('page', 'frontenduser');
$form->addHiddenValue('func',  'do_'.$func);
$form->addHiddenValue('id',    $user ? $user->getID() : '');

////////////////////////////////////////////////////////////////////////////////
// Normale Felder

$login     = new WV_Form_Input_Text('login', 'Login', $user ? $user->getLogin() : '');
$password1 = new WV_Form_Input_Password('password', 'Passwort', '');
$password2 = new WV_Form_Input_Password('password2', 'Passwort wiederholen', '');

$types = WV16_Users::getAllUserTypes();
$typesSelect = array();

foreach ($types as $type) {
	$typesSelect[$type->getID()] = $type->getTitle();
}

$type = new WV_Form_Select('type', 'Benutzertyp', $user ? $user->getTypeID() : _WV16::DEFAULT_USER_TYPE, $typesSelect);
$type->setAttribute('onchange', 'wv16.changeUserType(this)');
$type->setMultiple(false);

$form->addElements(array($login, $password1, $password2, $type));

////////////////////////////////////////////////////////////////////////////////
// Attribute bearbeiten

$form->beginFieldset('Attribute für den aktuellen Benutzertyp');

$userType      = $user ? $user->getTypeID() : _WV16::DEFAULT_USER_TYPE;
$requiredInfos = WV16_Users::getAttributesForUserType($userType);
$assignedData  = $user ? $user->getValues() : array();
$dataToDisplay = _WV16::getAttributesToDisplay(WV16_Users::getAllAttributes('', 'position', 'ASC', 0, -1), $assignedData, $requiredInfos);
$attributes    = $user ? WV16_Users::getUserTypeAsObject($user)->getAttributes() : $requiredInfos;
$attributeIDs  = array();

foreach ($attributes as $a) {
	$attributeIDs[] = $a->getID();
}

foreach ($dataToDisplay as $data) {
	$value      = !empty($data['data']) ? $data['data']->getValue() : null;
	$datatypeID = $data['attribute']->getDatatypeID();
	$hidden     = !in_array($data['attribute']->getID(), $attributeIDs);
	$parameters = array($form, $value, $hidden, $data['attribute']);
	
	WV_Datatype::call($datatypeID, 'renderAsFormElement', $parameters);
}

////////////////////////////////////////////////////////////////////////////////
// Zuordnung zu den Gruppen

$form->beginFieldset('Dieser Benutzer gehört den folgenden Gruppen an:');

$assignedGroups  = $user ? $user->getGroupIDs() : array();
$availableGroups = WV16_Users::getAllGroups();
$groups          = array();

foreach ($availableGroups as $index => $group) {
	$groups[$group->getID()] = $group->getTitle();
}

$groups = new WV_Form_CheckboxGroup('groups', 'Benutzergruppen', $assignedGroups, $groups);

$form->add($groups);

////////////////////////////////////////////////////////////////////////////////
// Buttons festlegen

if ($user) {
	$delete = new WV_Form_Button('submit', 'delete', 'Löschen');
	$delete->setAttribute('onclick', 'return confirm("Sicher, dass dieser Benutzer gelöscht werden soll?")');
	$form->setDeleteButton($delete);
}

////////////////////////////////////////////////////////////////////////////////
// Fertig!

$form->setFocus('login');
$form->render();

?>

<script type="text/javascript">
/* <![CDATA[ */
wv16.attributesPerType = [];
<?php
	
// Arrays generieren, die die Informationen beinhalten, welche Metainfos in welchem Typ
// vorhanden sind.

foreach (WV16_Users::getAllUserTypes() as $type) {
	print "\n";
	print 'wv16.attributesPerType['.$type->getID().'] = [];';
	
	foreach ($type->getAttributeIDs() as $attr) {
		print "\n";
		print 'wv16.attributesPerType['.$type->getID().'].push('.$attr.');';
	}
	
	print "\n";
}

?>
/* ]]> */
</script>
