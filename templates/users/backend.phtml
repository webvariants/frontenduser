<?
if (!empty($errormsg)) {
	print rex_warning($errormsg);
}

$form = new sly_Form('index.php', 'POST', 'Benutzer '.($func == 'add' ? 'erstellen' : 'bearbeiten'), '', 'wv16_user');

$form->addHiddenValue('page', 'frontenduser');
$form->addHiddenValue('func', 'do_'.$func);
$form->addHiddenValue('id',   $user ? $user->getID() : '');

////////////////////////////////////////////////////////////////////////////////
// Normale Felder

$login     = new sly_Form_Input_Text('login', 'Login', $user ? $user->getLogin() : '');
$password1 = new sly_Form_Input_Password('password', 'Passwort', '');
$password2 = new sly_Form_Input_Password('password2', 'Passwort wiederholen', '');
$confirmed = new sly_Form_Input_Checkbox('confirmed', 'Bestätigt', 1, 'Dieses Benutzerkonto ist bestätigt.');
$activated = new sly_Form_Input_Checkbox('activated', 'Freigeschaltet', 1, 'Dieses Benutzerkonto ist freigeschaltet.');

$confirmed->setChecked($user && $user->isConfirmed());
$confirmed->setHelpText('Bestätigung bedeutet, dass der Benutzer sein Konto selbst validiert (z.B. über einen Link in einer E-Mail) hat.');

$activated->setChecked(!$user || $user->isActivated());
$activated->setHelpText('Nur hier freigeschaltete Benutzer können sich einloggen.');

$types       = WV16_Users::getAllUserTypes();
$typesSelect = array();

foreach ($types as $type) {
	$typesSelect[$type->getID()] = $type->getTitle();
}

$type = new sly_Form_Select_DropDown('type', 'Benutzertyp', $user ? $user->getTypeID() : _WV16_FrontendUser::DEFAULT_USER_TYPE, $typesSelect);

$form->addElements(array($login, $password1, $password2, $activated, $confirmed, $type));

////////////////////////////////////////////////////////////////////////////////
// Attribute bearbeiten

$form->beginFieldset('Attribute für den aktuellen Benutzertyp', 'wv16attributes');

$userType      = $user ? $user->getTypeID() : _WV16_FrontendUser::DEFAULT_USER_TYPE;
$requiredInfos = WV16_Users::getAttributesForUserType($userType);
$assignedData  = $user ? $user->getValues() : array();
$dataToDisplay = _WV16_FrontendUser::getAttributesToDisplay(WV16_Users::getAllAttributes('', 'position', 'ASC', 0, -1), $assignedData, $requiredInfos);
$attributes    = $user ? WV16_Users::getUserTypeAsObject($user)->getAttributes() : $requiredInfos;
$attributeIDs  = array();

foreach ($attributes as $a) {
	$attributeIDs[] = $a->getID();
}

foreach ($dataToDisplay as $data) {
	$value      = !empty($data['data']) ? $data['data']->getSerializedValue() : null;
	$datatypeID = $data['attribute']->getDatatypeID();
	$hidden     = !in_array($data['attribute']->getID(), $attributeIDs);
	$parameters = array($form, $data['attribute'], array($value));
	$visible    = $data['attribute']->isVisible() ? '' : ' wv16_hidden_attribute';

	$style    = $hidden ? ' style="display:none"' : '';
	$fragment = new sly_Form_Fragment('<div id="wv16_attribute'.$data['attribute']->getID().'_row" class="wv16_attribute_row'.$visible.'"'.$style.'>');

	$form->add($fragment);
	WV_Datatype::call($datatypeID, 'renderForm', $parameters);
	$form->add(new sly_Form_Fragment('</div>'));
}

////////////////////////////////////////////////////////////////////////////////
// Zuordnung zu den Gruppen


$assignedGroups  = $user ? $user->getGroupIDs() : array();
$availableGroups = WV16_Users::getAllGroups();
$groups          = array();

foreach ($availableGroups as $index => $group) {
	$groups[$group->getID()] = $group->getTitle();
}

if (!empty($groups)) {
	$form->beginFieldset('Dieser Benutzer gehört den folgenden Gruppen an:');
	$groups = new sly_Form_Select_Checkbox('groups', 'Benutzergruppen', $assignedGroups, $groups);
	$form->add($groups);
}
else {
	$form->beginFieldset('Optionen');
}

////////////////////////////////////////////////////////////////////////////////
// Buttons festlegen

if ($user) {
	$delete = new sly_Form_input_Button('submit', 'delete', 'Löschen');
	$delete->setAttribute('onclick', 'return confirm("Sicher, dass dieser Benutzer gelöscht werden soll?")');
	$form->setDeleteButton($delete);
}

////////////////////////////////////////////////////////////////////////////////
// Fertig!

$form->setFocus('login');
print $form->render();

?>

<script type="text/javascript">
wv16.attributesPerType = [];
<?php

// Arrays generieren, die die Informationen beinhalten, welche Metainfos in welchem Typ
// vorhanden sind.

foreach (WV16_Users::getAllUserTypes() as $type) {
	print 'wv16.attributesPerType['.$type->getID().'] = [';

	$list = array();

	foreach ($type->getAttributes() as $attr) {
		if (!$attr->isVisible()) continue;
		$list[] = $attr->getID();
	}

	print implode(',', $list);
	print "];\n";
}

?>
</script>
