<?
if (!empty($errormsg)) {
	WV_redaxo::error($errormsg);
}

$form      = new WV_Backend_Form('index.php', 'POST', 'Attribut '.($func == 'add' ? 'erstellen' : 'bearbeiten'));
$datatypes = WV_Datatype::getAll('frontenduser');

$form->addHiddenValue('page',    'frontenduser');
$form->addHiddenValue('subpage', 'attributes');
$form->addHiddenValue('func',    'do_'.$func);
$form->addHiddenValue('id',      $attribute ? $attribute->getID() : '');

////////////////////////////////////////////////////////////////////////////////
// Normale Felder

$name = new WV_Form_Input_Text('name', 'Interner Name', $attribute ? $attribute->getName() : '');
$name->setHelpText('Über diesen Namen wird das Attribut programmseitig angsprochen.');

$title = new WV_Form_Input_Text('title', 'Titel', $attribute ? $attribute->getTitle() : '');
$title->setHelpText('Der Titel wird innerhalb von REDAXO in allen Formularen angezeigt.');

$helptext = new WV_Form_Textarea('helptext', 'Hilfetext', $attribute ? $attribute->getHelpText() : '');
$helptext->setHelpText('Hier können Sie eine kurze Erklärung zum Attribut eingeben, die im Frontend angezeigt wird.');
$helptext->setAttribute('rows', 2);
$helptext->setAttribute('cols', 50);

$hidden = new WV_Form_Checkbox('hidden', 'Anzeige', '1', 'Dieses Attribut soll im Backend nicht angezeigt werden.');
$hidden->setChecked($attribute && $attribute->isHidden());

////////////////////////////////////////////////////////////////////////////////
// Datentypauswahl und -formularteile zusammenbauen

$datatypeList  = array();
$datatypeForms = array();

foreach ($datatypes as $id => &$className) {
	$datatypeList[$id] = WV_Datatype::getTitle($id);
	
	$selected   = $attribute && $id == $attribute->getDatatypeID();
	$forms[$id] = WV_Datatype::call($id, 'getBackendForm', $selected ? array($attribute->getParams(), $attribute->getDefault()) : array(null, null));
}

$datatype = new WV_Form_Select('datatype', 'Datentyp', $attribute ? $attribute->getDatatypeID() : -1, $datatypeList);
$datatype->setAttribute('onchange', 'wv16.changeDatatype(this)');

$form->addElements(array($name, $title, $helptext, $hidden, $datatype));

////////////////////////////////////////////////////////////////////////////////
// Neuen Bereich anlegen, in dem die Datentypen sich austoben dürfen

$form->beginFieldset('Einstellungen für den gewählten Datentyp');

$firstRun = true; // beim Hinzufügen eines Attributs das erste Feld für den Datentyp angezeigt lassen

foreach ($forms as $datatypeID => $formText) {
	$display = (!$attribute && $firstRun) || ($attribute && $datatypeID == $attribute->getDatatypeID());
	
	$element = new WV_Form_Container('datatype_form_'.$datatypeID, '', $display ? '' : 'display:none');
	$element->setContent($formText);
	$form->add($element);
	
	$firstRun = false;
}

////////////////////////////////////////////////////////////////////////////////
// Benutzetyp-Liste anpassen

$form->beginFieldset('Zugehörige Benutzertypen');

$types = array();

foreach (WV16_Users::getAllUserTypes() as $typeObj) {
	$types[$typeObj->getID()] = $typeObj->getTitle();
}

$userTypes = new WV_Form_CheckboxGroup('utypes', 'Benutzertypen', $attribute ? $attribute->getUserTypes() : array(), array());
$userTypes->setValues($types);
$userTypes->setHelpText('Dieses Attribut gehört zu den obenstehenden Benutzertypen.');
$form->add($userTypes);

////////////////////////////////////////////////////////////////////////////////
// Löschen-Button

if ($attribute) {
	$delete = new WV_Form_Button('submit', 'delete', 'Löschen');
	$delete->setAttribute('onclick', 'return confirm("Soll dieses Attribut wirklich gelöscht werden?")');
	$form->setDeleteButton($delete);
}

////////////////////////////////////////////////////////////////////////////////
// Fertig!

$form->setFocus('name');
$form->render();
